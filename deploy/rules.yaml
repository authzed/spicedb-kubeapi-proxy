apiVersion: authzed.com/v1alpha1
kind: ProxyRule
lock: Pessimistic
match:
- apiVersion: v1
  resource: namespaces
  verbs: ["create"]
update:
  preconditionDoesNotExist:
  - tpl: "namespace:{{name}}#cluster@cluster:cluster"
  creates:
  - tpl: "namespace:{{name}}#creator@user:{{user.name}}"
  - tpl: "namespace:{{name}}#cluster@cluster:cluster"
---
apiVersion: authzed.com/v1alpha1
kind: ProxyRule
lock: Pessimistic
match:
- apiVersion: v1
  resource: namespaces
  verbs: ["delete"]
update:
  deletes:
  - tpl: "namespace:{{name}}#creator@user:{{user.name}}"
  - tpl: "namespace:{{name}}#cluster@cluster:cluster"
---
apiVersion: authzed.com/v1alpha1
kind: ProxyRule
match:
- apiVersion: v1
  resource: namespaces
  verbs: ["get"]
check:
- tpl: "namespace:{{name}}#view@user:{{user.name}}"
---
apiVersion: authzed.com/v1alpha1
kind: ProxyRule
match:
- apiVersion: v1
  resource: namespaces
  verbs: ["list", "watch"]
prefilter:
- fromObjectIDNameExpr: "{{resourceId}}"
  lookupMatchingResources:
    tpl: "namespace:$#view@user:{{user.name}}"
---
apiVersion: authzed.com/v1alpha1
kind: ProxyRule
lock: Pessimistic
match:
- apiVersion: v1
  resource: pods
  verbs: ["create"]
update:
  preconditionDoesNotExist:
  - tpl: "pod:{{name}}#namespace@namespace:{{namespace}}"
  creates:
  - tpl: "pod:{{namespacedName}}#creator@user:{{user.name}}"
  - tpl: "pod:{{name}}#namespace@namespace:{{namespace}}"
---
apiVersion: authzed.com/v1alpha1
kind: ProxyRule
lock: Pessimistic
match:
- apiVersion: v1
  resource: pods
  verbs: ["delete"]
update:
  deletes:
  - tpl: "pod:{{namespacedName}}#creator@user:{{user.name}}"
  - tpl: "pod:{{name}}#namespace@namespace:{{namespace}}"
---
apiVersion: authzed.com/v1alpha1
kind: ProxyRule
match:
- apiVersion: v1
  resource: pods
  verbs: ["get"]
check:
- tpl: "pod:{{namespacedName}}#view@user:{{user.name}}"
---
apiVersion: authzed.com/v1alpha1
kind: ProxyRule
match:
- apiVersion: v1
  resource: pods
  verbs: ["list", "watch"]
prefilter:
- fromObjectIDNamespaceExpr: "{{split_namespace(resourceId)}}"
  fromObjectIDNameExpr: "{{split_name(resourceId)}}"
  lookupMatchingResources:
    tpl: "pod:$#view@user:{{user.name}}"
