apiVersion: v1
kind: Namespace
metadata:
  name: spicedb-kubeapi-proxy
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: spicedb-kubeapi-proxy
    app.kubernetes.io/instance: spicedb-kubeapi-proxy
  name: spicedb-kubeapi-proxy
  namespace: spicedb-kubeapi-proxy
spec:
  serviceName: spicedb-kubeapi-proxy
  replicas: 2
  selector:
    matchLabels:
      app: spicedb-kubeapi-proxy
  template:
    metadata:
      labels:
        app: spicedb-kubeapi-proxy
        app.kubernetes.io/instance:  spicedb-kubeapi-proxy
    spec:
      containers:
        - args:
          - --secure-port=8443
          - --spicedb-endpoint
          - embedded://
          - --backend-kubeconfig
          - /opt/proxy/kubeconfig
          - --cert-dir
          - /opt/proxy/certs
          - --client-ca-file
          - /opt/proxy/clientcerts/ca.crt
          - --requestheader-client-ca-file
          - /opt/proxy/clientcerts/ca.crt
          - --requestheader-allowed-names
          - rakis
          - --requestheader-extra-headers-prefix
          - X-Remote-Extra-
          - --requestheader-group-headers
          - X-Remote-Group
          - --requestheader-username-headers
          - X-Remote-User
          image: authzed/spicedb-kubeapi-proxy:dev
          name: spicedb-kubeapi-proxy
          ports:
          - containerPort: 8443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /opt/proxy
              name: kubeconfig
            - mountPath: /opt/proxy/certs
              name: certs
            - mountPath: /opt/proxy/clientcerts
              name: client-ca
      volumes:
        - name: kubeconfig
          secret:
            secretName: rebac-proxy-kubeconfig
        - name: certs
          secret:
            secretName: spicedb-kubeapi-proxy-http-cert
        - name: client-ca
          secret:
            secretName: spicedb-kubeapi-proxy-client-ca-cert
  volumeClaimTemplates:
    - metadata:
        name: workflow-database
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: spicedb-kubeapi-proxy
  namespace: spicedb-kubeapi-proxy
spec:
  type: NodePort
  ports:
    - name: http
      nodePort: 30443
      port: 8443
  selector:
    app: spicedb-kubeapi-proxy
